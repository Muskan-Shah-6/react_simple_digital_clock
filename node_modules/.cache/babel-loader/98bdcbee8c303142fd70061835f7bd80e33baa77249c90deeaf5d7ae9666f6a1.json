{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-digital-clock\\\\digital_clock\\\\src\\\\Clock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './clock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n  const [alarmminute, setAlarmminutes] = useState(0);\n  const [alarmTime, setAlarmTime] = useState(null);\n  const [alarmTriggered, setAlarmTriggered] = useState(false);\n\n  // Function to update the current time\n  const update = () => {\n    const curTime = new Date().toLocaleTimeString();\n    setTime(curTime);\n  };\n\n  // Set an interval to update the time every second\n  useEffect(() => {\n    const interval = setInterval(update, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Function to set the alarm after the selected minutes\n  const setAlarmForMinutes = () => {\n    const currentTime = new Date();\n    currentTime.setMinutes(currentTime.getMinutes() + alarmminute);\n    setAlarmTime(currentTime);\n    setAlarmTriggered(false);\n    alert(\"Alarm set\");\n  };\n\n  // Check if the current time matches the alarm time\n  useEffect(() => {\n    if (alarmTime && !alarmTriggered) {\n      const currentTime = new Date();\n      if (currentTime.getHours() === alarmTime.getHours() && currentTime.getMinutes() === alarmTime.getMinutes()) {\n        alert(\"The alarm is going off!\");\n        setAlarmTriggered(true); // Prevent the alert from showing again\n      }\n    }\n  }, [time, alarmTime, alarmTriggered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digital_clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Digital Clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-clock\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Set Alarm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alarm in \", alarmminute, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: () => setAlarmminutes(alarmminute + 1),\n          children: \"Set Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: () => setAlarmminutes(alarmminute + 1),\n          children: \"Set Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: setAlarmForMinutes,\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"Hw7mZqe2u2JdSYi18YTr0coZT6s=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","time","setTime","Date","toLocaleTimeString","alarmminute","setAlarmminutes","alarmTime","setAlarmTime","alarmTriggered","setAlarmTriggered","update","curTime","interval","setInterval","clearInterval","setAlarmForMinutes","currentTime","setMinutes","getMinutes","alert","getHours","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","onClick","_c","$RefreshReg$"],"sources":["D:/react-digital-clock/digital_clock/src/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './clock.css';\r\n\r\nconst Clock = () => {\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    const [alarmminute, setAlarmminutes] = useState(0);\r\n    const [alarmTime, setAlarmTime] = useState(null);\r\n    const [alarmTriggered, setAlarmTriggered] = useState(false);\r\n\r\n    // Function to update the current time\r\n    const update = () => {\r\n        const curTime = new Date().toLocaleTimeString();\r\n        setTime(curTime);\r\n    };\r\n\r\n    // Set an interval to update the time every second\r\n    useEffect(() => {\r\n        const interval = setInterval(update, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    // Function to set the alarm after the selected minutes\r\n    const setAlarmForMinutes = () => {\r\n        const currentTime = new Date();\r\n        currentTime.setMinutes(currentTime.getMinutes() + alarmminute);\r\n        setAlarmTime(currentTime);\r\n        setAlarmTriggered(false);\r\n        alert(\"Alarm set\")\r\n    };\r\n\r\n    // Check if the current time matches the alarm time\r\n    useEffect(() => {\r\n        if (alarmTime && !alarmTriggered) {\r\n            const currentTime = new Date();\r\n            if (currentTime.getHours() === alarmTime.getHours() &&\r\n                currentTime.getMinutes() === alarmTime.getMinutes()) {\r\n                alert(\"The alarm is going off!\");\r\n                setAlarmTriggered(true); // Prevent the alert from showing again\r\n            }\r\n        }\r\n    }, [time, alarmTime, alarmTriggered]);\r\n\r\n    return (\r\n        <div className=\"clock\">\r\n            <div className=\"digital_clock\">\r\n                <h1>Digital Clock</h1>\r\n                <div className=\"timer-clock\">\r\n                    <h2>{time}</h2>\r\n                </div>\r\n                <h1>Set Alarm</h1>\r\n                <p>Alarm in {alarmminute} minutes</p>\r\n                <div style={{display:\"flex\",  gap: \"25px\"}}>\r\n                    <button className=\"btns\" onClick={() => setAlarmminutes(alarmminute + 1)}>Set Minutes</button>\r\n                    <button className=\"btns\" onClick={() => setAlarmminutes(alarmminute + 1)}>Set Minutes</button>\r\n                    <button className=\"btns\" onClick={setAlarmForMinutes}>Set Alarm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}