{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-digital-clock\\\\digital_clock\\\\src\\\\Clock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './clock.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const [time, setTime] = useState(new Date().toLocaleTimeString());\n  const [alarmminute, setAlarmminutes] = useState(0);\n  const [alarmseconds, setAlarmseconds] = useState(0);\n  const [alarmTime, setAlarmTime] = useState(null);\n  const [alarmTriggered, setAlarmTriggered] = useState(false);\n\n  // Function to update the current time\n  const update = () => {\n    const curTime = new Date().toLocaleTimeString();\n    console.log(Date());\n    setTime(curTime);\n  };\n\n  // Set an interval to update the time every second\n  useEffect(() => {\n    const interval = setInterval(update, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Function to set the alarm after the selected minutes\n  const setAlarmForMinutes = () => {\n    const currentTime = new Date();\n    ccurrentTime.setMinutes(currentTime.getMinutes() + alarmminute);\n    currentTime.getSeconds(currentTime.getSeconds() + alarmseconds);\n    setAlarmTime(currentTime);\n    setAlarmTriggered(false);\n    alert(\"Alarm set for\" + alarmminute + \"Minutes and\" + alarmseconds + \"seconds\");\n  };\n\n  // Check if the current time matches the alarm time\n  useEffect(() => {\n    if (alarmTime && !alarmTriggered) {\n      const currentTime = new Date();\n      if (currentTime.getHours() === alarmTime.getHours() && currentTime.getMinutes() === alarmTime.getMinutes() && currentTime.getSeconds() === alarmTime.getSeconds()) {\n        alert(\"The alarm is going off!\");\n        setAlarmTriggered(true); // Prevent the alert from showing again\n      }\n    }\n  }, [time, alarmTime, alarmTriggered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digital_clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Digital Clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-clock\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Set Alarm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alarm in \", alarmminute, \"M : \", alarmseconds, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: () => setAlarmminutes(alarmminute + 1),\n          children: \"Set Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: () => setAlarmminutes(alarmminute - 1),\n          children: \"Unset Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: () => setAlarmseconds(alarmseconds + 1),\n          children: \"Set Seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btns\",\n          onClick: setAlarmForMinutes,\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"nHHZON4BN/UnUTsgKE2wy+Z09To=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","time","setTime","Date","toLocaleTimeString","alarmminute","setAlarmminutes","alarmseconds","setAlarmseconds","alarmTime","setAlarmTime","alarmTriggered","setAlarmTriggered","update","curTime","console","log","interval","setInterval","clearInterval","setAlarmForMinutes","currentTime","ccurrentTime","setMinutes","getMinutes","getSeconds","alert","getHours","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","onClick","_c","$RefreshReg$"],"sources":["D:/react-digital-clock/digital_clock/src/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './clock.css';\r\n\r\nconst Clock = () => {\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    const [alarmminute, setAlarmminutes] = useState(0);\r\n    const [alarmseconds, setAlarmseconds] = useState(0);\r\n    const [alarmTime, setAlarmTime] = useState(null);\r\n    const [alarmTriggered, setAlarmTriggered] = useState(false);\r\n\r\n    // Function to update the current time\r\n    const update = () => {\r\n        const curTime = new Date().toLocaleTimeString();\r\n        console.log(Date());\r\n        setTime(curTime);\r\n    };\r\n\r\n    // Set an interval to update the time every second\r\n    useEffect(() => {\r\n        const interval = setInterval(update, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    // Function to set the alarm after the selected minutes\r\n    const setAlarmForMinutes = () => {\r\n        const currentTime = new Date();\r\n       \r\n       \r\n        ccurrentTime.setMinutes(currentTime.getMinutes() + alarmminute);\r\n        currentTime.getSeconds(currentTime.getSeconds() + alarmseconds);\r\n        setAlarmTime(currentTime);\r\n        setAlarmTriggered(false);\r\n        alert(\"Alarm set for\" + alarmminute + \"Minutes and\" + alarmseconds + \"seconds\")\r\n    };\r\n\r\n    // Check if the current time matches the alarm time\r\n    useEffect(() => {\r\n        if (alarmTime && !alarmTriggered) {\r\n            const currentTime = new Date();\r\n            if (currentTime.getHours() === alarmTime.getHours() &&\r\n            currentTime.getMinutes() === alarmTime.getMinutes() && \r\n            currentTime.getSeconds() === alarmTime.getSeconds())\r\n        {\r\n                alert(\"The alarm is going off!\");\r\n                setAlarmTriggered(true); // Prevent the alert from showing again\r\n            }\r\n        }\r\n    }, [time, alarmTime, alarmTriggered]);\r\n\r\n    return (\r\n        <div className=\"clock\">\r\n            <div className=\"digital_clock\">\r\n                <h1>Digital Clock</h1>\r\n                <div className=\"timer-clock\">\r\n                    <h2>{time}</h2>\r\n                </div>\r\n                <h1>Set Alarm</h1>\r\n                <p>Alarm in {alarmminute}M : {alarmseconds}s</p>\r\n                <div style={{display:\"flex\",  gap: \"25px\"}}>\r\n                    <button className=\"btns\" onClick={() => setAlarmminutes(alarmminute + 1)}>Set Minutes</button>\r\n                    <button className=\"btns\" onClick={() => setAlarmminutes(alarmminute - 1)}>Unset Minutes</button>\r\n                    <button className=\"btns\" onClick={() => setAlarmseconds(alarmseconds + 1)}>Set Seconds</button>\r\n                    <button className=\"btns\" onClick={setAlarmForMinutes}>Set Alarm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}